{"ast":null,"code":"var _jsxFileName = \"/home/neo/ProjetosWebDev/sd-09-project-trybewallet/src/components/Forms.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setTotal, setCurrencies, addExpenses } from '../actions';\nimport fetchCurrency from '../services/currencyApi';\nimport Expenses from './Expenses';\n\nclass Forms extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      description: '',\n      currency: '',\n      method: '',\n      tag: ''\n    };\n    this.fetchCurrencies = this.fetchCurrencies.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.totalExpenses = this.totalExpenses.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchCurrencies();\n  }\n\n  fetchCurrencies() {\n    const {\n      getCurrencies\n    } = this.props;\n    fetchCurrency().then(currencies => getCurrencies(currencies));\n  }\n\n  async handleClick() {\n    this.fetchCurrencies();\n    const {\n      getExpenses,\n      currencies,\n      expenses,\n      total\n    } = this.props;\n    const expense = {\n      id: expenses.length,\n      ...this.state,\n      exchangeRates: currencies\n    };\n    await getExpenses(expense);\n    this.totalExpenses();\n  }\n\n  handleChange({\n    target\n  }) {\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  async totalExpenses() {\n    const {\n      expenses,\n      getTotal\n    } = this.props;\n    let sum = 0;\n    expenses.forEach(expenseValue => {\n      sum += expenseValue.value * expenseValue.exchangeRates[expenseValue.currency].ask;\n    });\n    await getTotal(sum);\n  }\n\n  currencyInputDropDown(currencies) {\n    return /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"currency-input\",\n      onChange: this.handleChange,\n      name: \"currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, Object.keys(currencies).map(currency => /*#__PURE__*/React.createElement(\"option\", {\n      key: currency,\n      \"data-testid\": currency,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, currency)));\n  }\n\n  render() {\n    const {\n      currencies\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"forms\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      \"data-testid\": \"value-input\",\n      onChange: this.handleChange,\n      name: \"value\",\n      value: this.state.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      \"data-testid\": \"description-input\",\n      onChange: this.handleChange,\n      name: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }), currencies && this.currencyInputDropDown(currencies), /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"method-input\",\n      name: \"method\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, \"Cart\\xE3o de cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, \"Cart\\xE3o de d\\xE9bito\")), /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"tag-input\",\n      name: \"tag\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, \"Transporte\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, \"Sa\\xFAde\")), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, \"Adicionar despesa\")), /*#__PURE__*/React.createElement(Expenses, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  total: state.wallet.total,\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getTotal: total => dispatch(setTotal(total)),\n  getCurrencies: currencies => dispatch(setCurrencies(currencies)),\n  getExpenses: expenses => dispatch(addExpenses(expenses))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Forms);","map":{"version":3,"sources":["/home/neo/ProjetosWebDev/sd-09-project-trybewallet/src/components/Forms.js"],"names":["React","Component","connect","setTotal","setCurrencies","addExpenses","fetchCurrency","Expenses","Forms","constructor","props","state","value","description","currency","method","tag","fetchCurrencies","bind","handleChange","handleClick","totalExpenses","componentDidMount","getCurrencies","then","currencies","getExpenses","expenses","total","expense","id","length","exchangeRates","target","name","setState","getTotal","sum","forEach","expenseValue","ask","currencyInputDropDown","Object","keys","map","render","mapStateToProps","wallet","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setTotal, setCurrencies, addExpenses } from '../actions';\nimport fetchCurrency from '../services/currencyApi';\nimport Expenses from './Expenses';\n\nclass Forms extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      description: '',\n      currency: '',\n      method: '',\n      tag: '',\n    };\n    this.fetchCurrencies = this.fetchCurrencies.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.totalExpenses = this.totalExpenses.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchCurrencies();\n  }\n\n  fetchCurrencies() {\n    const { getCurrencies } = this.props;\n    fetchCurrency()\n      .then((currencies) => getCurrencies(currencies));\n  }\n\n  async handleClick() {\n    this.fetchCurrencies();\n    const { getExpenses, currencies, expenses, total } = this.props;\n    const expense = { id: expenses.length, ...this.state, exchangeRates: currencies };\n    await getExpenses(expense);\n    this.totalExpenses();\n\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  async totalExpenses() {\n    const { expenses, getTotal } = this.props;\n    let sum = 0;\n    expenses.forEach((expenseValue) => {\n      sum += expenseValue.value * expenseValue.exchangeRates[expenseValue.currency].ask});\n    await getTotal(sum);\n  }\n\n  currencyInputDropDown(currencies) {\n    return (\n      <select\n        data-testid=\"currency-input\"\n        onChange={ this.handleChange }\n        name=\"currency\"\n      >\n        { Object.keys(currencies).map((currency) => (\n          <option\n            key={ currency }\n            data-testid={ currency }\n          >\n            {currency}\n          </option>\n        )) }\n      </select>);\n  }\n\n  render() {\n    const { currencies } = this.props;\n    return (\n      <div>\n        <forms>\n          <input\n            type=\"number\"\n            data-testid=\"value-input\"\n            onChange={ this.handleChange }\n            name=\"value\"\n            value={ this.state.value }\n          />\n          <input\n            type=\"text\"\n            data-testid=\"description-input\"\n            onChange={ this.handleChange }\n            name=\"description\"\n          />\n          { currencies && this.currencyInputDropDown(currencies) }\n          <select\n            data-testid=\"method-input\"\n            name=\"method\"\n            onChange={ this.handleChange }\n          >\n            <option>Dinheiro</option>\n            <option>Cartão de crédito</option>\n            <option>Cartão de débito</option>\n          </select>\n          <select\n            data-testid=\"tag-input\"\n            name=\"tag\"\n            onChange={ this.handleChange }\n          >\n            <option>Alimentação</option>\n            <option>Lazer</option>\n            <option>Trabalho</option>\n            <option>Transporte</option>\n            <option>Saúde</option>\n          </select>\n          <button\n            type=\"button\"\n            onClick={ this.handleClick }\n          >\n            Adicionar despesa\n          </button>\n        </forms>\n        <Expenses />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => (\n  { total: state.wallet.total,\n    currencies: state.wallet.currencies,\n    expenses: state.wallet.expenses,\n  });\n\nconst mapDispatchToProps = (dispatch) => ({\n  getTotal: (total) => dispatch(setTotal(total)),\n  getCurrencies: (currencies) => dispatch(setCurrencies(currencies)),\n  getExpenses: (expenses) => dispatch(addExpenses(expenses)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Forms);\n"]},"metadata":{},"sourceType":"module"}