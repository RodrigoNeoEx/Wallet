{"ast":null,"code":"var _jsxFileName = \"/home/neo/ProjetosWebDev/sd-09-project-trybewallet/src/components/ExpensesList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { setExpenses, setTotal } from '../actions';\n\nclass ExpensesList extends Component {\n  constructor(props) {\n    super(props);\n    this.btnDelete = this.btnDelete.bind(this);\n    this.totalExpenses = this.totalExpenses.bind(this); // this.btnEdit = this.btnEdit.bind(this);\n  }\n\n  btnDelete(expenseid) {\n    const {\n      expenses,\n      expensesList\n    } = this.props;\n    const filter = expenses.filter(({\n      id\n    }) => id !== expenseid);\n    expensesList(filter);\n    this.totalExpenses(filter);\n  }\n\n  totalExpenses() {\n    const {\n      expenses,\n      getTotal\n    } = this.props;\n    let sum = 0;\n    expenses.forEach(expenseValue => {\n      sum += expenseValue.value * expenseValue.exchangeRates[expenseValue.currency].ask;\n    });\n    getTotal(sum.toFixed(2));\n  } // btnEdit(expenseID) {\n  //   return expenseID;\n  // }\n\n\n  render() {\n    const {\n      expenses\n    } = this.props; // const edit = this.btnEdit;\n\n    const btn = this.btnDelete;\n    return /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, \"Descri\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, \"Tag\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, \"M\\xE9todo de pagamento\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, \"Valor\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, \"Moeda\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, \"C\\xE2mbio utilizado\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, \"Valor convertido\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, \"Moeda de convers\\xE3o\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, \"Editar/Excluir\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, expenses.map(({\n      id,\n      value,\n      description,\n      currency,\n      method,\n      tag,\n      exchangeRates\n    }, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, description), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, tag), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, method), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, value), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, exchangeRates[currency].name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, parseFloat(exchangeRates[currency].ask).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, (value * exchangeRates[currency].ask).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, \"Real\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"delete-btn\",\n      type: \"button\",\n      onClick: () => btn(id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, \"Excluir\"), /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"edit-btn\",\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, \"Editar\"))))));\n  }\n\n}\n\nExpensesList.propTypes = {\n  expensesList: PropTypes.func.isRequired,\n  expenses: PropTypes.shape({\n    map: PropTypes.func.isRequired,\n    filter: PropTypes.func.isRequired\n  }).isRequired\n};\n\nconst mapStateToProps = state => ({\n  expenses: state.wallet.expenses,\n  total: state.wallet.total\n});\n\nconst mapDispatchToProps = dispatch => ({\n  expensesList: expenses => dispatch(setExpenses(expenses)),\n  getTotal: total => dispatch(setTotal(total))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpensesList);","map":{"version":3,"sources":["/home/neo/ProjetosWebDev/sd-09-project-trybewallet/src/components/ExpensesList.js"],"names":["React","Component","connect","PropTypes","setExpenses","setTotal","ExpensesList","constructor","props","btnDelete","bind","totalExpenses","expenseid","expenses","expensesList","filter","id","getTotal","sum","forEach","expenseValue","value","exchangeRates","currency","ask","toFixed","render","btn","map","description","method","tag","index","name","parseFloat","propTypes","func","isRequired","shape","mapStateToProps","state","wallet","total","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { setExpenses, setTotal } from '../actions';\n\nclass ExpensesList extends Component {\n  constructor(props) {\n    super(props);\n    this.btnDelete = this.btnDelete.bind(this);\n    this.totalExpenses = this.totalExpenses.bind(this);\n    // this.btnEdit = this.btnEdit.bind(this);\n  }\n\n  btnDelete(expenseid) {\n    const { expenses, expensesList } = this.props;\n    const filter = expenses.filter(({ id }) => id !== expenseid);\n    expensesList(filter);\n    this.totalExpenses(filter)\n  }\n\n  totalExpenses() {\n    const { expenses, getTotal } = this.props;\n    let sum = 0;\n    expenses.forEach((expenseValue) => {\n      sum += expenseValue.value * expenseValue.exchangeRates[expenseValue.currency].ask;\n    });\n    getTotal(sum.toFixed(2));\n  }\n\n\n  // btnEdit(expenseID) {\n  //   return expenseID;\n  // }\n\n  render() {\n    const { expenses } = this.props;\n    // const edit = this.btnEdit;\n    const btn = this.btnDelete;\n    return (\n      <table>\n        <thead>\n          <tr>\n            <th>Descrição</th>\n            <th>Tag</th>\n            <th>Método de pagamento</th>\n            <th>Valor</th>\n            <th>Moeda</th>\n            <th>Câmbio utilizado</th>\n            <th>Valor convertido</th>\n            <th>Moeda de conversão</th>\n            <th>Editar/Excluir</th>\n          </tr>\n        </thead>\n        <tbody>\n          {expenses.map((\n            { id, value, description, currency, method, tag, exchangeRates }, index,\n          ) => (\n            <tr key={ index }>\n              <td>{ description }</td>\n              <td>{ tag }</td>\n              <td>{ method }</td>\n              <td>{ value }</td>\n              <td>{ exchangeRates[currency].name }</td>\n              <td>{ parseFloat(exchangeRates[currency].ask).toFixed(2)}</td>\n              <td>{ (value * exchangeRates[currency].ask).toFixed(2)}</td>\n              <td>Real</td>\n              <td>\n                <button data-testid=\"delete-btn\" type=\"button\" onClick={ () => btn(id) }>\n                  Excluir\n                </button>\n                <button data-testid=\"edit-btn\" type=\"button\">\n                  Editar\n                </button>\n              </td>\n            </tr>\n          )) }\n        </tbody>\n      </table>\n    );\n  }\n}\n\nExpensesList.propTypes = {\n  expensesList: PropTypes.func.isRequired,\n  expenses: PropTypes.shape({\n    map: PropTypes.func.isRequired,\n    filter: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nconst mapStateToProps = (state) => (\n  { expenses: state.wallet.expenses,\n    total: state.wallet.total,\n  });\n\nconst mapDispatchToProps = (dispatch) => ({\n  expensesList: (expenses) => dispatch(setExpenses(expenses)),\n  getTotal: (total) => dispatch(setTotal(total)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpensesList);\n"]},"metadata":{},"sourceType":"module"}