{"ast":null,"code":"var _jsxFileName = \"/home/neo/ProjetosWebDev/sd-09-project-trybewallet/src/components/Forms.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setTotal, setCurrencies, addExpenses } from '../actions';\nimport fetchCurrency from '../services/currencyApi';\nimport Expenses from './Expenses';\n\nclass Forms extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      description: 'Hot Dog',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação'\n    };\n    this.fetchCurrencies = this.fetchCurrencies.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.totalExpenses = this.totalExpenses.bind(this);\n    this.inputNumber = this.inputNumber.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchCurrencies();\n  }\n\n  fetchCurrencies() {\n    const {\n      getCurrencies\n    } = this.props;\n    fetchCurrency().then(currencies => getCurrencies(currencies));\n  }\n\n  async handleClick() {\n    this.fetchCurrencies();\n    const {\n      getExpenses,\n      currencies,\n      expenses,\n      total\n    } = this.props;\n    const expense = {\n      id: expenses.length,\n      ...this.state,\n      exchangeRates: currencies\n    };\n    await getExpenses(expense);\n    this.totalExpenses();\n    this.setState({\n      value: 0,\n      description: 'Hot Dog',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação'\n    });\n  }\n\n  handleChange({\n    target\n  }) {\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  async totalExpenses() {\n    const {\n      expenses,\n      getTotal\n    } = this.props;\n    let sum = 0;\n    expenses.forEach(expenseValue => {\n      sum += expenseValue.value * expenseValue.exchangeRates[expenseValue.currency].ask;\n    });\n    await getTotal(sum.toFixed(2));\n  }\n\n  currencyInputDropDown(currencies) {\n    return /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"currency-input\",\n      onChange: this.handleChange,\n      name: \"currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, Object.keys(currencies).map(currency => /*#__PURE__*/React.createElement(\"option\", {\n      key: currency,\n      \"data-testid\": currency,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, currency)));\n  }\n\n  inputNumber(value) {\n    return /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      \"data-testid\": \"value-input\",\n      onChange: this.handleChange,\n      name: \"value\",\n      value: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    });\n  }\n\n  render() {\n    const {\n      currencies\n    } = this.props;\n    const {\n      value\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"forms\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, this.inputNumber(value), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      \"data-testid\": \"description-input\",\n      onChange: this.handleChange,\n      name: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }), currencies && this.currencyInputDropDown(currencies), /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"method-input\",\n      name: \"method\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, \"Cart\\xE3o de cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, \"Cart\\xE3o de d\\xE9bito\")), /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"tag-input\",\n      name: \"tag\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, \"Transporte\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, \"Sa\\xFAde\")), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, \"Adicionar despesa\")), /*#__PURE__*/React.createElement(Expenses, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  total: state.wallet.total,\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getTotal: total => dispatch(setTotal(total)),\n  getCurrencies: currencies => dispatch(setCurrencies(currencies)),\n  getExpenses: expenses => dispatch(addExpenses(expenses))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Forms);","map":{"version":3,"sources":["/home/neo/ProjetosWebDev/sd-09-project-trybewallet/src/components/Forms.js"],"names":["React","Component","connect","setTotal","setCurrencies","addExpenses","fetchCurrency","Expenses","Forms","constructor","props","state","value","description","currency","method","tag","fetchCurrencies","bind","handleChange","handleClick","totalExpenses","inputNumber","componentDidMount","getCurrencies","then","currencies","getExpenses","expenses","total","expense","id","length","exchangeRates","setState","target","name","getTotal","sum","forEach","expenseValue","ask","toFixed","currencyInputDropDown","Object","keys","map","render","mapStateToProps","wallet","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,aAAnB,EAAkCC,WAAlC,QAAqD,YAArD;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,KAAN,SAAoBP,SAApB,CAA8B;AAC5BQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,CADI;AAEXC,MAAAA,WAAW,EAAE,SAFF;AAGXC,MAAAA,QAAQ,EAAE,KAHC;AAIXC,MAAAA,MAAM,EAAE,UAJG;AAKXC,MAAAA,GAAG,EAAE;AALM,KAAb;AAOA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,WAAL,GAAmB,KAAKA,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKG,aAAL,GAAqB,KAAKA,aAAL,CAAmBH,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKI,WAAL,GAAmB,KAAKA,WAAL,CAAiBJ,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDK,EAAAA,iBAAiB,GAAG;AAClB,SAAKN,eAAL;AACD;;AAEDA,EAAAA,eAAe,GAAG;AAChB,UAAM;AAAEO,MAAAA;AAAF,QAAoB,KAAKd,KAA/B;AACAJ,IAAAA,aAAa,GACVmB,IADH,CACSC,UAAD,IAAgBF,aAAa,CAACE,UAAD,CADrC;AAED;;AAED,QAAMN,WAAN,GAAoB;AAClB,SAAKH,eAAL;AACA,UAAM;AAAEU,MAAAA,WAAF;AAAeD,MAAAA,UAAf;AAA2BE,MAAAA,QAA3B;AAAqCC,MAAAA;AAArC,QAA+C,KAAKnB,KAA1D;AACA,UAAMoB,OAAO,GAAG;AAAEC,MAAAA,EAAE,EAAEH,QAAQ,CAACI,MAAf;AAAuB,SAAG,KAAKrB,KAA/B;AAAsCsB,MAAAA,aAAa,EAAEP;AAArD,KAAhB;AACA,UAAMC,WAAW,CAACG,OAAD,CAAjB;AACA,SAAKT,aAAL;AACA,SAAKa,QAAL,CAAc;AACZtB,MAAAA,KAAK,EAAE,CADK;AAEZC,MAAAA,WAAW,EAAE,SAFD;AAGZC,MAAAA,QAAQ,EAAE,KAHE;AAIZC,MAAAA,MAAM,EAAE,UAJI;AAKZC,MAAAA,GAAG,EAAE;AALO,KAAd;AAOD;;AAEDG,EAAAA,YAAY,CAAC;AAAEgB,IAAAA;AAAF,GAAD,EAAa;AACvB,UAAM;AAAEC,MAAAA,IAAF;AAAQxB,MAAAA;AAAR,QAAkBuB,MAAxB;AACA,SAAKD,QAAL,CAAc;AACZ,OAACE,IAAD,GAAQxB;AADI,KAAd;AAGD;;AAED,QAAMS,aAAN,GAAsB;AACpB,UAAM;AAAEO,MAAAA,QAAF;AAAYS,MAAAA;AAAZ,QAAwB,KAAK3B,KAAnC;AACA,QAAI4B,GAAG,GAAG,CAAV;AACAV,IAAAA,QAAQ,CAACW,OAAT,CAAkBC,YAAD,IAAkB;AACjCF,MAAAA,GAAG,IAAIE,YAAY,CAAC5B,KAAb,GAAqB4B,YAAY,CAACP,aAAb,CAA2BO,YAAY,CAAC1B,QAAxC,EAAkD2B,GAA9E;AAAkF,KADpF;AAEA,UAAMJ,QAAQ,CAACC,GAAG,CAACI,OAAJ,CAAY,CAAZ,CAAD,CAAd;AACD;;AAEDC,EAAAA,qBAAqB,CAACjB,UAAD,EAAa;AAChC,wBACE;AACE,qBAAY,gBADd;AAEE,MAAA,QAAQ,EAAG,KAAKP,YAFlB;AAGE,MAAA,IAAI,EAAC,UAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKIyB,MAAM,CAACC,IAAP,CAAYnB,UAAZ,EAAwBoB,GAAxB,CAA6BhC,QAAD,iBAC5B;AACE,MAAA,GAAG,EAAGA,QADR;AAEE,qBAAcA,QAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGA,QAJH,CADA,CALJ,CADF;AAeD;;AAEDQ,EAAAA,WAAW,CAACV,KAAD,EAAQ;AACjB,wBACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,qBAAY,aAFd;AAGE,MAAA,QAAQ,EAAG,KAAKO,YAHlB;AAIE,MAAA,IAAI,EAAC,OAJP;AAKE,MAAA,KAAK,EAAGP,KALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD;;AAEDmC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAErB,MAAAA;AAAF,QAAiB,KAAKhB,KAA5B;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKW,WAAL,CAAiBV,KAAjB,CADH,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,qBAAY,mBAFd;AAGE,MAAA,QAAQ,EAAG,KAAKO,YAHlB;AAIE,MAAA,IAAI,EAAC,aAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAQIO,UAAU,IAAI,KAAKiB,qBAAL,CAA2BjB,UAA3B,CARlB,eASE;AACE,qBAAY,cADd;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,QAAQ,EAAG,KAAKP,YAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAPF,CATF,eAkBE;AACE,qBAAY,WADd;AAEE,MAAA,IAAI,EAAC,KAFP;AAGE,MAAA,QAAQ,EAAG,KAAKA,YAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,CAlBF,eA6BE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAG,KAAKC,WAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BA7BF,CADF,eAqCE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArCF,CADF;AAyCD;;AAnI2B;;AAsI9B,MAAM4B,eAAe,GAAIrC,KAAD,KACtB;AAAEkB,EAAAA,KAAK,EAAElB,KAAK,CAACsC,MAAN,CAAapB,KAAtB;AACEH,EAAAA,UAAU,EAAEf,KAAK,CAACsC,MAAN,CAAavB,UAD3B;AAEEE,EAAAA,QAAQ,EAAEjB,KAAK,CAACsC,MAAN,CAAarB;AAFzB,CADsB,CAAxB;;AAMA,MAAMsB,kBAAkB,GAAIC,QAAD,KAAe;AACxCd,EAAAA,QAAQ,EAAGR,KAAD,IAAWsB,QAAQ,CAAChD,QAAQ,CAAC0B,KAAD,CAAT,CADW;AAExCL,EAAAA,aAAa,EAAGE,UAAD,IAAgByB,QAAQ,CAAC/C,aAAa,CAACsB,UAAD,CAAd,CAFC;AAGxCC,EAAAA,WAAW,EAAGC,QAAD,IAAcuB,QAAQ,CAAC9C,WAAW,CAACuB,QAAD,CAAZ;AAHK,CAAf,CAA3B;;AAMA,eAAe1B,OAAO,CAAC8C,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C1C,KAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setTotal, setCurrencies, addExpenses } from '../actions';\nimport fetchCurrency from '../services/currencyApi';\nimport Expenses from './Expenses';\n\nclass Forms extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      description: 'Hot Dog',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n    };\n    this.fetchCurrencies = this.fetchCurrencies.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.totalExpenses = this.totalExpenses.bind(this);\n    this.inputNumber = this.inputNumber.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchCurrencies();\n  }\n\n  fetchCurrencies() {\n    const { getCurrencies } = this.props;\n    fetchCurrency()\n      .then((currencies) => getCurrencies(currencies));\n  }\n\n  async handleClick() {\n    this.fetchCurrencies();\n    const { getExpenses, currencies, expenses, total } = this.props;\n    const expense = { id: expenses.length, ...this.state, exchangeRates: currencies };\n    await getExpenses(expense);\n    this.totalExpenses();\n    this.setState({\n      value: 0,\n      description: 'Hot Dog',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n    });\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  async totalExpenses() {\n    const { expenses, getTotal} = this.props;\n    let sum = 0;\n    expenses.forEach((expenseValue) => {\n      sum += expenseValue.value * expenseValue.exchangeRates[expenseValue.currency].ask});\n    await getTotal(sum.toFixed(2));\n  }\n\n  currencyInputDropDown(currencies) {\n    return (\n      <select\n        data-testid=\"currency-input\"\n        onChange={ this.handleChange }\n        name=\"currency\"\n      >\n        { Object.keys(currencies).map((currency) => (\n          <option\n            key={ currency }\n            data-testid={ currency }\n          >\n            {currency}\n          </option>\n        )) }\n      </select>);\n  }\n\n  inputNumber(value) {\n    return (\n      <input\n        type=\"number\"\n        data-testid=\"value-input\"\n        onChange={ this.handleChange }\n        name=\"value\"\n        value={ value }\n      />\n    );\n  }\n\n  render() {\n    const { currencies } = this.props;\n    const { value } = this.state;\n    return (\n      <div>\n        <forms>\n          {this.inputNumber(value)}\n          <input\n            type=\"text\"\n            data-testid=\"description-input\"\n            onChange={ this.handleChange }\n            name=\"description\"\n          />\n          { currencies && this.currencyInputDropDown(currencies) }\n          <select\n            data-testid=\"method-input\"\n            name=\"method\"\n            onChange={ this.handleChange }\n          >\n            <option>Dinheiro</option>\n            <option>Cartão de crédito</option>\n            <option>Cartão de débito</option>\n          </select>\n          <select\n            data-testid=\"tag-input\"\n            name=\"tag\"\n            onChange={ this.handleChange }\n          >\n            <option>Alimentação</option>\n            <option>Lazer</option>\n            <option>Trabalho</option>\n            <option>Transporte</option>\n            <option>Saúde</option>\n          </select>\n          <button\n            type=\"button\"\n            onClick={ this.handleClick }\n          >\n            Adicionar despesa\n          </button>\n        </forms>\n        <Expenses />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => (\n  { total: state.wallet.total,\n    currencies: state.wallet.currencies,\n    expenses: state.wallet.expenses,\n  });\n\nconst mapDispatchToProps = (dispatch) => ({\n  getTotal: (total) => dispatch(setTotal(total)),\n  getCurrencies: (currencies) => dispatch(setCurrencies(currencies)),\n  getExpenses: (expenses) => dispatch(addExpenses(expenses)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Forms);\n"]},"metadata":{},"sourceType":"module"}