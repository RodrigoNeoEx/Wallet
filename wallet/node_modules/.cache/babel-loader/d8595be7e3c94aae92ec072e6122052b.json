{"ast":null,"code":"var _jsxFileName = \"/home/neo/ProjetosWebDev/sd-09-project-trybewallet/src/pages/Login.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setEmail } from '../actions';\nimport './login.css';\nimport logo from './echangeImg.jpg';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      btnClass: btnTeste\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.validate = this.validate.bind(this);\n    this.clickHandler = this.clickHandler.bind(this);\n  }\n\n  handleChange({\n    target\n  }) {\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  checkMail(email) {\n    const emailRegex = /^([\\w.-]+)@([\\w-]+)((.(\\w){2,3})+)$/;\n    return emailRegex.test(email);\n  }\n\n  checkPassword(password) {\n    const min = 6;\n\n    if (password.length >= min) {\n      return true;\n    }\n  }\n\n  validate() {\n    const {\n      password,\n      email\n    } = this.state;\n    return this.checkPassword(password) && this.checkMail(email);\n  }\n\n  clickHandler() {\n    const {\n      history,\n      getEmail\n    } = this.props;\n    const {\n      email,\n      btnClass\n    } = this.state;\n    this.setState({\n      [btnClass]: 'ok'\n    });\n    const timer = 2500;\n    getEmail(email);\n    if (this.validate()) setTimeout(() => history.push('/carteira'), timer);\n  }\n\n  render() {\n    const {\n      email,\n      password,\n      btnClass\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"backgroundLogin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loginBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"email\",\n      placeholder: \"Insert your E-mail\",\n      name: \"email\",\n      type: \"email\",\n      value: email,\n      \"data-testid\": \"email-input\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"password\",\n      placeholder: \"Insert Password\",\n      name: \"password\",\n      type: \"password\",\n      value: password,\n      \"data-testid\": \"password-input\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: btnClass,\n      type: \"button\",\n      onClick: this.clickHandler,\n      disabled: !this.validate(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, \"Entrar\")))));\n  }\n\n}\n\nLogin.propTypes = {\n  getEmail: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getEmail: email => dispatch(setEmail(email))\n});\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/neo/ProjetosWebDev/sd-09-project-trybewallet/src/pages/Login.js"],"names":["React","PropTypes","connect","setEmail","logo","Login","Component","constructor","props","state","email","password","btnClass","btnTeste","handleChange","bind","validate","clickHandler","target","name","value","setState","checkMail","emailRegex","test","checkPassword","min","length","history","getEmail","timer","setTimeout","push","render","propTypes","func","isRequired","shape","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setEmail } from '../actions';\nimport './login.css';\nimport logo from './echangeImg.jpg';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      btnClass: btnTeste,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.validate = this.validate.bind(this);\n    this.clickHandler = this.clickHandler.bind(this);\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  checkMail(email) {\n    const emailRegex = /^([\\w.-]+)@([\\w-]+)((.(\\w){2,3})+)$/;\n    return emailRegex.test(email);\n  }\n\n  checkPassword(password) {\n    const min = 6;\n    if (password.length >= min) {\n      return true;\n    }\n  }\n\n  validate() {\n    const { password, email } = this.state;\n    return this.checkPassword(password) && this.checkMail(email);\n  }\n\n  clickHandler() {\n    const { history, getEmail } = this.props;\n    const { email, btnClass } = this.state;\n    this.setState({ [btnClass]: 'ok' });\n    const timer = 2500;\n    getEmail(email);\n    if (this.validate()) setTimeout(() => history.push('/carteira'), timer);\n  }\n\n  render() {\n    const { email, password, btnClass } = this.state;\n    return (\n      <div className=\"backgroundLogin\">\n        <div className=\"login\">\n          <div className=\"loginBox\">\n            <div className=\"inputContainer\">\n              <img src={ logo } alt=\"logo\" />\n              <input\n                className=\"email\"\n                placeholder=\"Insert your E-mail\"\n                name=\"email\"\n                type=\"email\"\n                value={ email }\n                data-testid=\"email-input\"\n                onChange={ this.handleChange }\n              />\n              <input\n                className=\"password\"\n                placeholder=\"Insert Password\"\n                name=\"password\"\n                type=\"password\"\n                value={ password }\n                data-testid=\"password-input\"\n                onChange={ this.handleChange }\n              />\n              <button\n                className={ btnClass }\n                type=\"button\"\n                onClick={ this.clickHandler }\n                disabled={ !this.validate() }\n              >\n                Entrar\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  getEmail: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  getEmail: (email) => dispatch(setEmail(email)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}