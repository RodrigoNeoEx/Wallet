{"ast":null,"code":"var _jsxFileName = \"/home/neo/ProjetosWebDev/sd-09-project-trybewallet/src/components/ExpenseForms.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setTotal, setCurrencies, addExpenses } from '../actions';\nimport fetchCurrency from '../services/currencyApi'; // import ExpensesTable from './ExpensesTable';\n\nimport ExpensesList from './ExpensesList';\n\nclass ExpenseForms extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      description: 'Hot Dog',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação'\n    };\n    this.fetchCurrencies = this.fetchCurrencies.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this); // this.totalExpenses = this.totalExpenses.bind(this);\n\n    this.inputNumber = this.inputNumber.bind(this);\n    this.inputText = this.inputText.bind(this);\n    this.selectMethod = this.selectMethod.bind(this);\n    this.inputTag = this.inputTag.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchCurrencies();\n  }\n\n  fetchCurrencies() {\n    const {\n      getCurrencies\n    } = this.props;\n    fetchCurrency().then(currencies => getCurrencies(currencies));\n  }\n\n  async handleClick() {\n    this.fetchCurrencies();\n    const {\n      getExpenses,\n      currencies,\n      expenses\n    } = this.props;\n    const expense = {\n      id: expenses.length,\n      ...this.state,\n      exchangeRates: currencies\n    };\n    await getExpenses(expense); // this.totalExpenses();\n\n    this.setState({\n      value: 0,\n      description: 'Hot Dog',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação'\n    });\n  }\n\n  handleChange({\n    target\n  }) {\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value\n    });\n  } // totalExpenses() {\n  //   const { expenses, getTotal } = this.props;\n  //   let sum = 0;\n  //   expenses.forEach((expenseValue) => {\n  //     sum += expenseValue.value * expenseValue.exchangeRates[expenseValue.currency].ask;\n  //   });\n  //   getTotal(sum.toFixed(2));\n  // }\n\n\n  currencyInputDropDown(currencies) {\n    return /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"currency-input\",\n      onChange: this.handleChange,\n      name: \"currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, Object.keys(currencies).map(currency => /*#__PURE__*/React.createElement(\"option\", {\n      key: currency,\n      \"data-testid\": currency,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, currency)));\n  }\n\n  inputNumber(value) {\n    return /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      \"data-testid\": \"value-input\",\n      onChange: this.handleChange,\n      name: \"value\",\n      value: value,\n      pattern: \"^\\\\d*(\\\\.\\\\d{0,2})?$\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    });\n  }\n\n  inputText() {\n    return /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      \"data-testid\": \"description-input\",\n      onChange: this.handleChange,\n      name: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    });\n  }\n\n  selectMethod() {\n    return /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"method-input\",\n      name: \"method\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, \"Cart\\xE3o de cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, \"Cart\\xE3o de d\\xE9bito\"));\n  }\n\n  inputTag() {\n    return /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"tag-input\",\n      name: \"tag\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }, \"Transporte\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }, \"Sa\\xFAde\"));\n  }\n\n  render() {\n    const {\n      currencies\n    } = this.props;\n    const {\n      value\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"forms\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }, this.inputNumber(value), this.inputText(), this.selectMethod(), currencies && this.currencyInputDropDown(currencies), this.inputTag(), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, \"Adicionar despesa\")), /*#__PURE__*/React.createElement(ExpensesList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  total: state.wallet.total,\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses\n});\n\nconst mapDispatchToProps = dispatch => ({\n  // getTotal: (total) => dispatch(setTotal(total)),\n  getCurrencies: currencies => dispatch(setCurrencies(currencies)),\n  getExpenses: expenses => dispatch(addExpenses(expenses))\n});\n\nExpenseForms.propTypes = {\n  getCurrencies: PropTypes.func.isRequired,\n  getExpenses: PropTypes.func.isRequired,\n  // getTotal: PropTypes.func.isRequired,\n  expenses: PropTypes.shape({\n    length: PropTypes.func.isRequired,\n    forEach: PropTypes.func.isRequired\n  }).isRequired,\n  currencies: PropTypes.shape.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseForms);","map":{"version":3,"sources":["/home/neo/ProjetosWebDev/sd-09-project-trybewallet/src/components/ExpenseForms.js"],"names":["React","Component","PropTypes","connect","setTotal","setCurrencies","addExpenses","fetchCurrency","ExpensesList","ExpenseForms","constructor","props","state","value","description","currency","method","tag","fetchCurrencies","bind","handleChange","handleClick","inputNumber","inputText","selectMethod","inputTag","componentDidMount","getCurrencies","then","currencies","getExpenses","expenses","expense","id","length","exchangeRates","setState","target","name","currencyInputDropDown","Object","keys","map","render","mapStateToProps","total","wallet","mapDispatchToProps","dispatch","propTypes","func","isRequired","shape","forEach"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setTotal, setCurrencies, addExpenses } from '../actions';\nimport fetchCurrency from '../services/currencyApi';\n// import ExpensesTable from './ExpensesTable';\nimport ExpensesList from './ExpensesList';\n\nclass ExpenseForms extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      description: 'Hot Dog',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n    };\n    this.fetchCurrencies = this.fetchCurrencies.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    // this.totalExpenses = this.totalExpenses.bind(this);\n    this.inputNumber = this.inputNumber.bind(this);\n    this.inputText = this.inputText.bind(this);\n    this.selectMethod = this.selectMethod.bind(this);\n    this.inputTag = this.inputTag.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchCurrencies();\n  }\n\n  fetchCurrencies() {\n    const { getCurrencies } = this.props;\n    fetchCurrency()\n      .then((currencies) => getCurrencies(currencies));\n  }\n\n  async handleClick() {\n    this.fetchCurrencies();\n    const { getExpenses, currencies, expenses } = this.props;\n    const expense = { id: expenses.length, ...this.state, exchangeRates: currencies };\n    await getExpenses(expense);\n    // this.totalExpenses();\n    this.setState({\n      value: 0,\n      description: 'Hot Dog',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n    });\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  // totalExpenses() {\n  //   const { expenses, getTotal } = this.props;\n  //   let sum = 0;\n  //   expenses.forEach((expenseValue) => {\n  //     sum += expenseValue.value * expenseValue.exchangeRates[expenseValue.currency].ask;\n  //   });\n  //   getTotal(sum.toFixed(2));\n  // }\n\n  currencyInputDropDown(currencies) {\n    return (\n      <select\n        data-testid=\"currency-input\"\n        onChange={ this.handleChange }\n        name=\"currency\"\n      >\n        { Object.keys(currencies).map((currency) => (\n          <option\n            key={ currency }\n            data-testid={ currency }\n          >\n            {currency}\n          </option>\n        )) }\n      </select>);\n  }\n\n  inputNumber(value) {\n    return (\n      <input\n        type=\"number\"\n        data-testid=\"value-input\"\n        onChange={ this.handleChange }\n        name=\"value\"\n        value={ value }\n        pattern=\"^\\d*(\\.\\d{0,2})?$\"\n      />\n    );\n  }\n\n  inputText() {\n    return (\n      <input\n        type=\"text\"\n        data-testid=\"description-input\"\n        onChange={ this.handleChange }\n        name=\"description\"\n      />\n    );\n  }\n\n  selectMethod() {\n    return (\n      <select\n        data-testid=\"method-input\"\n        name=\"method\"\n        onChange={ this.handleChange }\n      >\n        <option>Dinheiro</option>\n        <option>Cartão de crédito</option>\n        <option>Cartão de débito</option>\n      </select>\n    );\n  }\n\n  inputTag() {\n    return (\n      <select\n        data-testid=\"tag-input\"\n        name=\"tag\"\n        onChange={ this.handleChange }\n      >\n        <option>Alimentação</option>\n        <option>Lazer</option>\n        <option>Trabalho</option>\n        <option>Transporte</option>\n        <option>Saúde</option>\n      </select>\n    );\n  }\n\n  render() {\n    const { currencies } = this.props;\n    const { value } = this.state;\n    return (\n      <div>\n        <forms>\n          {this.inputNumber(value)}\n          {this.inputText()}\n          {this.selectMethod()}\n          { currencies && this.currencyInputDropDown(currencies) }\n          {this.inputTag()}\n          <button\n            type=\"button\"\n            onClick={ this.handleClick }\n          >\n            Adicionar despesa\n          </button>\n        </forms>\n        {/* <ExpensesTable /> */}\n        <ExpensesList />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => (\n  { total: state.wallet.total,\n    currencies: state.wallet.currencies,\n    expenses: state.wallet.expenses,\n  });\n\nconst mapDispatchToProps = (dispatch) => ({\n  // getTotal: (total) => dispatch(setTotal(total)),\n  getCurrencies: (currencies) => dispatch(setCurrencies(currencies)),\n  getExpenses: (expenses) => dispatch(addExpenses(expenses)),\n});\n\nExpenseForms.propTypes = {\n  getCurrencies: PropTypes.func.isRequired,\n  getExpenses: PropTypes.func.isRequired,\n  // getTotal: PropTypes.func.isRequired,\n  expenses: PropTypes.shape({\n    length: PropTypes.func.isRequired,\n    forEach: PropTypes.func.isRequired,\n  }).isRequired,\n  currencies: PropTypes.shape.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseForms);\n"]},"metadata":{},"sourceType":"module"}