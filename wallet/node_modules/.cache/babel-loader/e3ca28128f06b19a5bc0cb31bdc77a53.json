{"ast":null,"code":"var _jsxFileName = \"/home/neo/ProjetosWebDev/sd-09-project-trybewallet/src/pages/Login.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { login } from '../actions';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.validate = this.validate.bind(this);\n    this.clickHandler = this.clickHandler.bind(this);\n  }\n\n  handleChange({\n    target\n  }) {\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  checkMail(email) {\n    const emailRegex = /^([\\w.-]+)@([\\w-]+)((.(\\w){2,3})+)$/;\n    return emailRegex.test(email);\n  }\n\n  checkPassword(password) {\n    const min = 6;\n\n    if (password.length >= min) {\n      return true;\n    }\n  }\n\n  validate() {\n    const {\n      password,\n      email\n    } = this.state;\n    return this.checkPassword(password) && this.checkMail(email);\n  }\n\n  clickHandler() {\n    const {\n      history,\n      getEmail\n    } = this.props;\n    const {\n      email\n    } = this.state;\n    getEmail(email);\n    if (this.validate()) history.push('/carteira');\n  }\n\n  render() {\n    const {\n      email,\n      password\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Insert your E-mail\",\n      name: \"email\",\n      type: \"email\",\n      value: email,\n      \"data-testid\": \"email-input\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Insert Password\",\n      name: \"password\",\n      type: \"password\",\n      value: password,\n      \"data-testid\": \"password-input\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.clickHandler,\n      disabled: !this.validate(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, \"Entrar\"));\n  }\n\n}\n\nLogin.propTypes = {\n  getEmail: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getEmail: email => dispatch(login(email))\n});\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/neo/ProjetosWebDev/sd-09-project-trybewallet/src/pages/Login.js"],"names":["React","Link","PropTypes","connect","login","Login","Component","constructor","props","state","email","password","handleChange","bind","validate","clickHandler","target","name","value","setState","checkMail","emailRegex","test","checkPassword","min","length","history","getEmail","push","render","propTypes","func","isRequired","shape","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { login } from '../actions';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.validate = this.validate.bind(this);\n    this.clickHandler = this.clickHandler.bind(this);\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  checkMail(email) {\n    const emailRegex = /^([\\w.-]+)@([\\w-]+)((.(\\w){2,3})+)$/;\n    return emailRegex.test(email);\n  }\n\n  checkPassword(password) {\n    const min = 6;\n    if (password.length >= min) {\n      return true;\n    }\n  }\n\n  validate() {\n    const { password, email } = this.state;\n    return this.checkPassword(password) && this.checkMail(email);\n  }\n\n  clickHandler() {\n    const { history, getEmail } = this.props;\n    const { email } = this.state;\n    getEmail(email);\n    if (this.validate()) history.push('/carteira');\n  }\n\n  render() {\n    const { email, password } = this.state;\n    return (\n      <div>\n        <input\n          placeholder=\"Insert your E-mail\"\n          name=\"email\"\n          type=\"email\"\n          value={ email }\n          data-testid=\"email-input\"\n          onChange={ this.handleChange }\n        />\n        <input\n          placeholder=\"Insert Password\"\n          name=\"password\"\n          type=\"password\"\n          value={ password }\n          data-testid=\"password-input\"\n          onChange={ this.handleChange }\n        />\n        <button\n          type=\"button\"\n          onClick={ this.clickHandler }\n          disabled={ !this.validate() }\n        >\n          Entrar\n        </button>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  getEmail: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  getEmail: (email) => dispatch(login(email)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}