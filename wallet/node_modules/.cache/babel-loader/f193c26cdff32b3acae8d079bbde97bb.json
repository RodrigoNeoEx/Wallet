{"ast":null,"code":"var _jsxFileName = \"/home/neo/Desktop/gitHub/All Trybe Projects/Wallet/wallet/src/components/ExpenseForms.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setCurrencies, addExpenses, editExpenses, setExpenses } from '../actions';\nimport fetchCurrency from '../services/currencyApi';\nimport ExpensesList from './ExpensesList';\nimport './expenseforms.css';\n\nclass ExpenseForms extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      description: 'Hot Dog',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação'\n    };\n    this.fetchFilteredCurrencies = this.fetchFilteredCurrencies.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.inputNumber = this.inputNumber.bind(this);\n    this.inputText = this.inputText.bind(this);\n    this.selectMethod = this.selectMethod.bind(this);\n    this.inputTag = this.inputTag.bind(this);\n    this.handleExpenseChange = this.handleExpenseChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchFilteredCurrencies();\n  }\n\n  fetchFilteredCurrencies() {\n    const {\n      getCurrencies\n    } = this.props;\n    fetchCurrency().then(currencies => getCurrencies(Object.keys(currencies)));\n  }\n\n  async handleClick() {\n    const fetch = await fetchCurrency();\n    const {\n      getExpenses,\n      expenses\n    } = this.props;\n    const expense = {\n      id: expenses.length,\n      ...this.state,\n      exchangeRates: fetch\n    };\n    await getExpenses(expense);\n    this.setState({\n      value: 0,\n      description: 'Hot Dog',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação'\n    });\n  }\n\n  handleChange({\n    target\n  }) {\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleExpenseChange() {\n    const {\n      expensesList,\n      editExpense,\n      expenses,\n      expense\n    } = this.props;\n    const {\n      id,\n      exchangeRates\n    } = expense;\n    const changeExpense = { ...this.state,\n      id,\n      exchangeRates\n    };\n    const changed = expenses.map(list => list.id === id ? changeExpense : list);\n    expensesList(changed);\n    editExpense(false);\n    this.setState({\n      value: 0,\n      description: 'Hot Dog',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Lazer'\n    });\n  }\n\n  currencyInputDropDown(currencies) {\n    return /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"currency-input\",\n      onChange: this.handleChange,\n      name: \"currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, currencies.map(currency => /*#__PURE__*/React.createElement(\"option\", {\n      className: \"option\",\n      key: currency,\n      \"data-testid\": currency,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, currency)));\n  }\n\n  inputNumber(value) {\n    return /*#__PURE__*/React.createElement(\"input\", {\n      className: \"number\",\n      type: \"number\",\n      \"data-testid\": \"value-input\",\n      onChange: this.handleChange,\n      name: \"value\",\n      value: value,\n      pattern: \"^\\\\d*(\\\\.\\\\d{0,2})?$\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    });\n  }\n\n  inputText() {\n    return /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Describe activity\",\n      type: \"text\",\n      \"data-testid\": \"description-input\",\n      onChange: this.handleChange,\n      name: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    });\n  }\n\n  selectMethod() {\n    return /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"method-input\",\n      name: \"method\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      className: \"option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      className: \"option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, \"Cart\\xE3o de cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      className: \"option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }, \"Cart\\xE3o de d\\xE9bito\"));\n  }\n\n  inputTag() {\n    return /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"tag-input\",\n      name: \"tag\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      className: \"option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      className: \"option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      className: \"option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      className: \"option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, \"Transporte\"), /*#__PURE__*/React.createElement(\"option\", {\n      className: \"option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }, \"Sa\\xFAde\"));\n  } // href RafaReis\n\n\n  createButton(label, event) {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btnForms\",\n      type: \"button\",\n      onClick: event,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }\n    }, label);\n  }\n\n  render() {\n    const {\n      currencies,\n      eventEdit\n    } = this.props;\n    const {\n      value\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"backgroundForms\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"forms\", {\n      className: \"expenseForms\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }\n    }, this.inputNumber(value), this.inputText(), this.selectMethod(), currencies && this.currencyInputDropDown(currencies), this.inputTag(), eventEdit ? this.createButton('Editar despesa', this.handleExpenseChange) : this.createButton('Adicionar despesa', this.handleClick)), /*#__PURE__*/React.createElement(ExpensesList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses,\n  eventEdit: state.wallet.eventEdit,\n  expense: state.wallet.expense\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrencies: currencies => dispatch(setCurrencies(currencies)),\n  getExpenses: expense => dispatch(addExpenses(expense)),\n  expensesList: expenses => dispatch(setExpenses(expenses)),\n  editExpense: (eventEdit, expense) => dispatch(editExpenses(eventEdit, expense))\n});\n\nExpenseForms.propTypes = {\n  getCurrencies: PropTypes.func.isRequired,\n  getExpenses: PropTypes.func.isRequired,\n  editExpense: PropTypes.func.isRequired,\n  expensesList: PropTypes.func.isRequired,\n  eventEdit: PropTypes.bool.isRequired,\n  expense: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    exchangeRates: PropTypes.string.isRequired\n  }).isRequired,\n  expenses: PropTypes.shape({\n    length: PropTypes.func.isRequired,\n    forEach: PropTypes.func.isRequired,\n    map: PropTypes.func.isRequired\n  }).isRequired,\n  currencies: PropTypes.shape.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseForms);","map":{"version":3,"sources":["/home/neo/Desktop/gitHub/All Trybe Projects/Wallet/wallet/src/components/ExpenseForms.js"],"names":["React","Component","PropTypes","connect","setCurrencies","addExpenses","editExpenses","setExpenses","fetchCurrency","ExpensesList","ExpenseForms","constructor","props","state","value","description","currency","method","tag","fetchFilteredCurrencies","bind","handleChange","handleClick","inputNumber","inputText","selectMethod","inputTag","handleExpenseChange","componentDidMount","getCurrencies","then","currencies","Object","keys","fetch","getExpenses","expenses","expense","id","length","exchangeRates","setState","target","name","expensesList","editExpense","changeExpense","changed","map","list","currencyInputDropDown","createButton","label","event","render","eventEdit","mapStateToProps","wallet","mapDispatchToProps","dispatch","propTypes","func","isRequired","bool","shape","number","string","forEach"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setCurrencies, addExpenses, editExpenses, setExpenses } from '../actions';\nimport fetchCurrency from '../services/currencyApi';\nimport ExpensesList from './ExpensesList';\nimport './expenseforms.css';\n\nclass ExpenseForms extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      description: 'Hot Dog',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n    };\n    this.fetchFilteredCurrencies = this.fetchFilteredCurrencies.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.inputNumber = this.inputNumber.bind(this);\n    this.inputText = this.inputText.bind(this);\n    this.selectMethod = this.selectMethod.bind(this);\n    this.inputTag = this.inputTag.bind(this);\n    this.handleExpenseChange = this.handleExpenseChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchFilteredCurrencies();\n  }\n\n  fetchFilteredCurrencies() {\n    const { getCurrencies } = this.props;\n    fetchCurrency()\n      .then((currencies) => getCurrencies(Object.keys(currencies)));\n  }\n\n  async handleClick() {\n    const fetch = await fetchCurrency();\n    const { getExpenses, expenses } = this.props;\n    const expense = { id: expenses.length, ...this.state, exchangeRates: fetch };\n    await getExpenses(expense);\n    this.setState({\n      value: 0,\n      description: 'Hot Dog',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n    });\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleExpenseChange() {\n    const { expensesList, editExpense, expenses, expense } = this.props;\n    const { id, exchangeRates } = expense;\n    const changeExpense = { ...this.state, id, exchangeRates };\n    const changed = expenses.map((list) => (list.id === id ? changeExpense : list));\n    expensesList(changed);\n    editExpense(false);\n    this.setState({ value: 0,\n      description: 'Hot Dog',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Lazer',\n    });\n  }\n\n  currencyInputDropDown(currencies) {\n    return (\n      <select\n        data-testid=\"currency-input\"\n        onChange={ this.handleChange }\n        name=\"currency\"\n      >\n        { currencies.map((currency) => (\n          <option\n            className=\"option\"\n            key={ currency }\n            data-testid={ currency }\n          >\n            {currency}\n          </option>\n        )) }\n      </select>);\n  }\n\n  inputNumber(value) {\n    return (\n      <input\n        className=\"number\"\n        type=\"number\"\n        data-testid=\"value-input\"\n        onChange={ this.handleChange }\n        name=\"value\"\n        value={ value }\n        pattern=\"^\\d*(\\.\\d{0,2})?$\"\n      />\n    );\n  }\n\n  inputText() {\n    return (\n      <input\n        placeholder=\"Describe activity\"\n        type=\"text\"\n        data-testid=\"description-input\"\n        onChange={ this.handleChange }\n        name=\"description\"\n      />\n    );\n  }\n\n  selectMethod() {\n    return (\n      <select\n        data-testid=\"method-input\"\n        name=\"method\"\n        onChange={ this.handleChange }\n      >\n        <option className=\"option\">Dinheiro</option>\n        <option className=\"option\">Cartão de crédito</option>\n        <option className=\"option\">Cartão de débito</option>\n      </select>\n    );\n  }\n\n  inputTag() {\n    return (\n      <select\n        data-testid=\"tag-input\"\n        name=\"tag\"\n        onChange={ this.handleChange }\n      >\n        <option className=\"option\">Alimentação</option>\n        <option className=\"option\">Lazer</option>\n        <option className=\"option\">Trabalho</option>\n        <option className=\"option\">Transporte</option>\n        <option className=\"option\">Saúde</option>\n      </select>\n    );\n  }\n\n  // href RafaReis\n  createButton(label, event) {\n    return (\n      <button\n        className=\"btnForms\"\n        type=\"button\"\n        onClick={ event }\n      >\n        { label }\n      </button>\n    );\n  }\n\n  render() {\n    const { currencies, eventEdit } = this.props;\n    const { value } = this.state;\n    return (\n      <div className=\"backgroundForms\">\n        <forms className=\"expenseForms\">\n          {this.inputNumber(value)}\n          {this.inputText()}\n          {this.selectMethod()}\n          { currencies && this.currencyInputDropDown(currencies) }\n          {this.inputTag()}\n          { eventEdit ? this.createButton('Editar despesa', this.handleExpenseChange)\n            : this.createButton('Adicionar despesa', this.handleClick) }\n        </forms>\n        <ExpensesList />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => (\n  { currencies: state.wallet.currencies,\n    expenses: state.wallet.expenses,\n    eventEdit: state.wallet.eventEdit,\n    expense: state.wallet.expense,\n  });\n\nconst mapDispatchToProps = (dispatch) => ({\n  getCurrencies: (currencies) => dispatch(setCurrencies(currencies)),\n  getExpenses: (expense) => dispatch(addExpenses(expense)),\n  expensesList: (expenses) => dispatch(setExpenses(expenses)),\n  editExpense: (eventEdit, expense) => dispatch(editExpenses(eventEdit, expense)),\n});\n\nExpenseForms.propTypes = {\n  getCurrencies: PropTypes.func.isRequired,\n  getExpenses: PropTypes.func.isRequired,\n  editExpense: PropTypes.func.isRequired,\n  expensesList: PropTypes.func.isRequired,\n  eventEdit: PropTypes.bool.isRequired,\n  expense: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    exchangeRates: PropTypes.string.isRequired,\n\n  }).isRequired,\n  expenses: PropTypes.shape({\n    length: PropTypes.func.isRequired,\n    forEach: PropTypes.func.isRequired,\n    map: PropTypes.func.isRequired,\n  }).isRequired,\n  currencies: PropTypes.shape.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseForms);\n"]},"metadata":{},"sourceType":"module"}