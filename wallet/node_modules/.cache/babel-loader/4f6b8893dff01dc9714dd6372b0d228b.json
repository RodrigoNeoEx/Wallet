{"ast":null,"code":"var _jsxFileName = \"/home/neo/ProjetosWebDev/sd-09-project-trybewallet/src/components/Forms.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setTotal, setCurrencies, addExpenses } from '../actions';\nimport fetchCurrency from '../services/currencyApi';\n\nclass Forms extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      description: 'Hot Dog',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação'\n    };\n    this.fetchCurrencies = this.fetchCurrencies.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchCurrencies();\n  }\n\n  fetchCurrencies() {\n    const {\n      getCurrencies\n    } = this.props;\n    fetchCurrency().then(currencies => getCurrencies(currencies));\n  }\n\n  async handleClick() {\n    this.fetchCurrencies();\n    const {\n      getExpenses,\n      currencies,\n      expenses\n    } = this.props;\n    const expense = {\n      id: expenses.length,\n      ...this.state,\n      exchangeRates: currencies\n    };\n    getExpenses(expense);\n  }\n\n  handleChange({\n    target\n  }) {\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  currencyInputDropDown(currencies) {\n    return /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"currency-input\",\n      onChange: this.handleChange,\n      name: \"currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, Object.keys(currencies).map(currency => /*#__PURE__*/React.createElement(\"option\", {\n      key: currency,\n      \"data-testid\": currency,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, currency)));\n  }\n\n  render() {\n    const {\n      currencies,\n      expenses\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"forms\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      \"data-testid\": \"value-input\",\n      onChange: this.handleChange,\n      name: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      \"data-testid\": \"description-input\",\n      onChange: this.handleChange,\n      name: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }), currencies && this.currencyInputDropDown(currencies), /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"method-input\",\n      name: \"method\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, \"Cart\\xE3o de cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, \"Cart\\xE3o de d\\xE9bito\")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"select\",\n      \"data-testid\": \"tag-input\",\n      name: \"tag\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, \"Sa\\xFAde\")), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, \"Adicionar despesa\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, expenses));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  total: state.wallet.total,\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getTotal: total => dispatch(setTotal(total)),\n  getCurrencies: currencies => dispatch(setCurrencies(currencies)),\n  getExpenses: expenses => dispatch(addExpenses(expenses))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Forms);","map":{"version":3,"sources":["/home/neo/ProjetosWebDev/sd-09-project-trybewallet/src/components/Forms.js"],"names":["React","Component","connect","setTotal","setCurrencies","addExpenses","fetchCurrency","Forms","constructor","props","state","value","description","currency","method","tag","fetchCurrencies","bind","handleChange","handleClick","componentDidMount","getCurrencies","then","currencies","getExpenses","expenses","expense","id","length","exchangeRates","target","name","setState","currencyInputDropDown","Object","keys","map","render","mapStateToProps","total","wallet","mapDispatchToProps","dispatch","getTotal"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setTotal, setCurrencies, addExpenses } from '../actions';\nimport fetchCurrency from '../services/currencyApi';\n\nclass Forms extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      description: 'Hot Dog',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n    };\n    this.fetchCurrencies = this.fetchCurrencies.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchCurrencies();\n  }\n\n  fetchCurrencies() {\n    const { getCurrencies } = this.props;\n    fetchCurrency()\n      .then((currencies) => getCurrencies(currencies));\n  }\n\n  async handleClick() {\n    this.fetchCurrencies();\n    const { getExpenses, currencies, expenses } = this.props;\n    const expense = { id: expenses.length, ...this.state, exchangeRates: currencies };\n    getExpenses(expense);\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  currencyInputDropDown(currencies) {\n    return (\n      <select\n        data-testid=\"currency-input\"\n        onChange={ this.handleChange }\n        name=\"currency\"\n      >\n        { Object.keys(currencies).map((currency) => (\n          <option\n            key={ currency }\n            data-testid={ currency }\n          >\n            {currency}\n          </option>\n        )) }\n      </select>);\n  }\n\n  render() {\n    const { currencies, expenses } = this.props;\n    return (\n      <forms>\n        <input\n          type=\"number\"\n          data-testid=\"value-input\"\n          onChange={ this.handleChange }\n          name=\"value\"\n        />\n        <input\n          type=\"text\"\n          data-testid=\"description-input\"\n          onChange={ this.handleChange }\n          name=\"description\"\n        />\n        { currencies && this.currencyInputDropDown(currencies) }\n        <select\n          data-testid=\"method-input\"\n          name=\"method\"\n          onChange={ this.handleChange }\n        >\n          <option>Dinheiro</option>\n          <option>Cartão de crédito</option>\n          <option>Cartão de débito</option>\n        </select>\n        <input\n          type=\"select\"\n          data-testid=\"tag-input\"\n          name=\"tag\"\n          onChange={ this.handleChange }\n        >\n          <option>Alimentação</option>\n          <option>Lazer</option>\n          <option>Trabalho</option>\n          <option>Saúde</option>\n        </input>\n        <button\n          type=\"button\"\n          onClick={ this.handleClick }\n        >\n          Adicionar despesa\n        </button>\n        <div>{expenses}</div>\n      </forms>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => (\n  { total: state.wallet.total,\n    currencies: state.wallet.currencies,\n    expenses: state.wallet.expenses,\n  });\n\nconst mapDispatchToProps = (dispatch) => ({\n  getTotal: (total) => dispatch(setTotal(total)),\n  getCurrencies: (currencies) => dispatch(setCurrencies(currencies)),\n  getExpenses: (expenses) => dispatch(addExpenses(expenses)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Forms);\n"]},"metadata":{},"sourceType":"module"}