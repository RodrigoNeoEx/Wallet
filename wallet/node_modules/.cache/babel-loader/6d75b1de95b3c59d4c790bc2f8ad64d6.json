{"ast":null,"code":"var _jsxFileName = \"/home/neo/ProjetosWebDev/sd-09-project-trybewallet/src/components/Forms.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setTotal, setCurrencies, addExpenses } from '../actions';\nimport fetchCurrency from '../services/currencyApi';\n\nclass Forms extends Component {\n  constructor(props) {\n    super(props);\n    this.fetchCurrencies = this.fetchCurrencies.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchCurrencies();\n  }\n\n  fetchCurrencies() {\n    const {\n      getCurrencies\n    } = this.props;\n    fetchCurrency().then(currencies => getCurrencies(currencies));\n  }\n\n  handleChange({\n    target\n  }) {\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  currencyInputDropDown(currencies) {\n    if (currencies) {\n      return /*#__PURE__*/React.createElement(\"select\", {\n        \"data-testid\": \"currency-input\",\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }, Object.keys(currencies).map(currency => /*#__PURE__*/React.createElement(\"option\", {\n        key: currency,\n        \"data-testid\": currency,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      }, currency)));\n    }\n\n    return null;\n  } // sumCurrencies(){\n  // }\n  // handleClick() {\n  //   const { getTotal } = this.props;\n  // }\n\n\n  render() {\n    const {\n      currencies\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"forms\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      \"data-testid\": \"value-input\",\n      onChange: this.handleChange,\n      name: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      \"data-testid\": \"description-input\",\n      onChange: this.handleChange,\n      name: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }), this.currencyInputDropDown(currencies), /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"method-input\",\n      name: \"method\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, \"Cart\\xE3o de cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, \"Cart\\xE3o de d\\xE9bito\")), /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"tag-input\",\n      name: \"tag\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, \"Sa\\xFAde\")), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, \"Adicionar despesa\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  total: state.wallet.total\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getTotal: total => dispatch(setTotal(total)),\n  getCurrencies: currencies => dispatch(setCurrencies(currencies)),\n  getExpenses: expenses => dispatch(addExpenses(expenses))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Forms);","map":{"version":3,"sources":["/home/neo/ProjetosWebDev/sd-09-project-trybewallet/src/components/Forms.js"],"names":["React","Component","connect","setTotal","setCurrencies","addExpenses","fetchCurrency","Forms","constructor","props","fetchCurrencies","bind","handleChange","handleClick","componentDidMount","getCurrencies","then","currencies","target","name","value","setState","currencyInputDropDown","Object","keys","map","currency","render","mapStateToProps","state","total","wallet","mapDispatchToProps","dispatch","getTotal","getExpenses","expenses"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setTotal, setCurrencies, addExpenses } from '../actions';\nimport fetchCurrency from '../services/currencyApi';\n\nclass Forms extends Component {\n  constructor(props) {\n    super(props);\n    this.fetchCurrencies = this.fetchCurrencies.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchCurrencies();\n  }\n\n  fetchCurrencies() {\n    const { getCurrencies } = this.props;\n    fetchCurrency()\n      .then((currencies) => getCurrencies(currencies));\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  currencyInputDropDown(currencies) {\n    if (currencies) {\n      return (\n        <select\n          data-testid=\"currency-input\"\n          onChange={ this.handleChange }\n        >\n          { Object.keys(currencies).map((currency) => (\n            <option\n              key={ currency }\n              data-testid={ currency }\n            >\n              {currency}\n            </option>\n          )) }\n        </select>);\n    }\n    return null;\n  }\n\n  // sumCurrencies(){\n\n  // }\n\n  // handleClick() {\n  //   const { getTotal } = this.props;\n\n  // }\n\n  render() {\n    const { currencies } = this.props;\n    return (\n      <forms>\n        <input\n          type=\"number\"\n          data-testid=\"value-input\"\n          onChange={ this.handleChange }\n          name=\"value\"\n        />\n        <input\n          type=\"text\"\n          data-testid=\"description-input\"\n          onChange={ this.handleChange }\n          name=\"description\"\n        />\n        { this.currencyInputDropDown(currencies) }\n        <select\n          data-testid=\"method-input\"\n          name=\"method\"\n          onChange={ this.handleChange }\n        >\n          <option>Dinheiro</option>\n          <option>Cartão de crédito</option>\n          <option>Cartão de débito</option>\n        </select>\n        <select\n          data-testid=\"tag-input\"\n          name=\"tag\"\n          onChange={ this.handleChange }\n        >\n          <option>Alimentação</option>\n          <option>Lazer</option>\n          <option>Trabalho</option>\n          <option>Saúde</option>\n        </select>\n        <button\n          type=\"button\"\n          onClick={ this.handleClick }\n        >\n          Adicionar despesa\n        </button>\n      </forms>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({ total: state.wallet.total });\n\nconst mapDispatchToProps = (dispatch) => ({\n  getTotal: (total) => dispatch(setTotal(total)),\n  getCurrencies: (currencies) => dispatch(setCurrencies(currencies)),\n  getExpenses: (expenses) => dispatch(addExpenses(expenses)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Forms);\n"]},"metadata":{},"sourceType":"module"}