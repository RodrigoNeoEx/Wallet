{"ast":null,"code":"var _jsxFileName = \"/home/neo/ProjetosWebDev/sd-09-project-trybewallet/src/components/Header.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.totalExpenses = this.totalExpenses.bind(this);\n  }\n\n  totalExpenses() {\n    const {\n      expenses,\n      getTotal\n    } = this.props;\n    let sum = 0;\n    expenses.forEach(expenseValue => {\n      sum += expenseValue.value * expenseValue.exchangeRates[expenseValue.currency].ask;\n    });\n    getTotal(sum.toFixed(2));\n  }\n\n  render() {\n    // const { total } = this.state;\n    const {\n      email,\n      total\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"email-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, `Hello user ${email}`), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"total-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, total || 0), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"header-currency-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, \"BRL in your account\"));\n  }\n\n}\n\nHeader.propTypes = {\n  email: PropTypes.string.isRequired,\n  total: PropTypes.number.isRequired\n};\n\nconst mapStateToProps = state => ({\n  email: state.user.email,\n  total: state.wallet.total\n});\n\nexport default connect(mapStateToProps)(Header);","map":{"version":3,"sources":["/home/neo/ProjetosWebDev/sd-09-project-trybewallet/src/components/Header.js"],"names":["React","Component","connect","PropTypes","Header","constructor","props","totalExpenses","bind","expenses","getTotal","sum","forEach","expenseValue","value","exchangeRates","currency","ask","toFixed","render","email","total","propTypes","string","isRequired","number","mapStateToProps","state","user","wallet"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAC7BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AAEDD,EAAAA,aAAa,GAAG;AACd,UAAM;AAAEE,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAyB,KAAKJ,KAApC;AACA,QAAIK,GAAG,GAAG,CAAV;AACAF,IAAAA,QAAQ,CAACG,OAAT,CAAkBC,YAAD,IAAkB;AACjCF,MAAAA,GAAG,IAAIE,YAAY,CAACC,KAAb,GAAqBD,YAAY,CAACE,aAAb,CAA2BF,YAAY,CAACG,QAAxC,EAAkDC,GAA9E;AACD,KAFD;AAGAP,IAAAA,QAAQ,CAACC,GAAG,CAACO,OAAJ,CAAY,CAAZ,CAAD,CAAR;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP;AACA,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAmB,KAAKf,KAA9B;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,qBAAY,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,cAAac,KAAM,EADxB,CADF,eAIE;AAAG,qBAAY,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8BC,KAAK,IAAI,CAAvC,CAJF,eAKE;AAAG,qBAAY,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BALF,CADF;AASD;;AA3B4B;;AA8B/BjB,MAAM,CAACkB,SAAP,GAAmB;AACjBF,EAAAA,KAAK,EAAEjB,SAAS,CAACoB,MAAV,CAAiBC,UADP;AAEjBH,EAAAA,KAAK,EAAElB,SAAS,CAACsB,MAAV,CAAiBD;AAFP,CAAnB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCP,EAAAA,KAAK,EAAEO,KAAK,CAACC,IAAN,CAAWR,KADgB;AAElCC,EAAAA,KAAK,EAAEM,KAAK,CAACE,MAAN,CAAaR;AAFc,CAAZ,CAAxB;;AAKA,eAAenB,OAAO,CAACwB,eAAD,CAAP,CAAyBtB,MAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.totalExpenses = this.totalExpenses.bind(this);\n  }\n\n  totalExpenses() {\n    const { expenses, getTotal } = this.props;\n    let sum = 0;\n    expenses.forEach((expenseValue) => {\n      sum += expenseValue.value * expenseValue.exchangeRates[expenseValue.currency].ask;\n    });\n    getTotal(sum.toFixed(2));\n  }\n\n  render() {\n    // const { total } = this.state;\n    const { email, total } = this.props;\n    return (\n      <header>\n        <p data-testid=\"email-field\">\n          { `Hello user ${email}` }\n        </p>\n        <p data-testid=\"total-field\">{total || 0 }</p>\n        <p data-testid=\"header-currency-field\">BRL in your account</p>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  email: PropTypes.string.isRequired,\n  total: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n  total: state.wallet.total,\n});\n\nexport default connect(mapStateToProps)(Header);\n"]},"metadata":{},"sourceType":"module"}