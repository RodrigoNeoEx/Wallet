{"ast":null,"code":"var _jsxFileName = \"/home/neo/ProjetosWebDev/sd-09-project-trybewallet/src/components/Forms.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setTotal } from '../actions';\nimport fetchCurrency from '../services/currencyApi';\n\nclass Forms extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allCurrencies: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    fetchCurrency().then(currencies => this.setState({\n      allCurrencies: currencies\n    }));\n  }\n\n  handleChange({\n    target\n  }) {\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  currencyInputDropDown(allCurrencies) {\n    return /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"currency-input\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, allCurrencies.map(currency => /*#__PURE__*/React.createElement(\"option\", {\n      key: currency.code,\n      \"data-testid\": currency.code,\n      ask: currency.ask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, currency.code)));\n  }\n\n  sumCurrencies(allCurrencies) {}\n\n  handleClick() {\n    const {\n      getTotal\n    } = this.props;\n  }\n\n  render() {\n    const {\n      allCurrencies\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"forms\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      \"data-testid\": \"value-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      \"data-testid\": \"description-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }), this.currencyInputDropDown(allCurrencies), /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"method-input\",\n      name: \"paymentMethod\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, \"Cart\\xE3o de cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, \"Cart\\xE3o de d\\xE9bito\")), /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"tag-input\",\n      name: \"paymentMethod\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, \"Sa\\xFAde\")), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, \"Adicionar despesa\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  total: state.wallet.total\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getTotal: total => dispatch(setTotal(total))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Forms);","map":{"version":3,"sources":["/home/neo/ProjetosWebDev/sd-09-project-trybewallet/src/components/Forms.js"],"names":["React","Component","connect","setTotal","fetchCurrency","Forms","constructor","props","state","allCurrencies","handleChange","bind","handleClick","componentDidMount","then","currencies","setState","target","name","value","currencyInputDropDown","map","currency","code","ask","sumCurrencies","getTotal","render","mapStateToProps","total","wallet","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setTotal } from '../actions';\nimport fetchCurrency from '../services/currencyApi';\n\nclass Forms extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allCurrencies: [],\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    fetchCurrency()\n      .then((currencies) => this.setState({ allCurrencies: currencies }));\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  currencyInputDropDown(allCurrencies) {\n    return (\n      <select\n        data-testid=\"currency-input\"\n        onChange={ this.handleChange }\n      >\n        { allCurrencies.map((currency) => (\n          <option\n            key={ currency.code }\n            data-testid={ currency.code }\n            ask={ currency.ask }\n          >\n            {currency.code}\n          </option>\n        )) }\n      </select>);\n  }\n\n  sumCurrencies(allCurrencies){\n\n  }\n\n  handleClick() {\n    const { getTotal } = this.props;\n\n  }\n\n  render() {\n    const { allCurrencies } = this.state;\n    return (\n      <forms>\n        <input type=\"number\" data-testid=\"value-input\" />\n        <input type=\"text\" data-testid=\"description-input\" />\n        { this.currencyInputDropDown(allCurrencies) }\n        <select\n          data-testid=\"method-input\"\n          name=\"paymentMethod\"\n          onChange={ this.handleChange }\n        >\n          <option>Dinheiro</option>\n          <option>Cartão de crédito</option>\n          <option>Cartão de débito</option>\n        </select>\n        <select\n          data-testid=\"tag-input\"\n          name=\"paymentMethod\"\n          onChange={ this.handleChange }\n        >\n          <option>Alimentação</option>\n          <option>Lazer</option>\n          <option>Trabalho</option>\n          <option>Saúde</option>\n        </select>\n        <button\n          type=\"button\"\n          onClick={ this.handleClick }\n        >\n          Adicionar despesa\n        </button>\n      </forms>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({ total: state.wallet.total });\n\nconst mapDispatchToProps = (dispatch) => ({\n  getTotal: (total) => dispatch(setTotal(total)) });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Forms);\n"]},"metadata":{},"sourceType":"module"}